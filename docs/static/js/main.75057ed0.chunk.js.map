{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","length","cats","type","value","onChange","target","getGif","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mLAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAS,IACpBP,GAAc,SAAAQ,GAAI,OAAKN,GAAL,mBAAoBM,OACtCL,EAAc,MAMlB,SACI,uBACIM,KAAK,OACLC,MAAOR,EACPS,SAnBc,SAACN,GAEvBF,EAAcE,EAAEO,OAAOF,a,+BCTlBG,EAAM,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACZC,EADY,iDACqCC,UAAUH,GAD/C,sDAECI,MAAMF,GAFP,cAEZG,EAFY,gBAGKA,EAAKC,OAHV,uBAGVC,EAHU,EAGVA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QATvB,kBAYXM,GAZW,4CAAH,sDCENO,EAAc,SAAC,GAAsB,EAApBJ,GAAqB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAIpC,OACI,qBAAKc,UAAU,OAAf,SACI,qBAAKC,IAAKf,EAAMgB,IAAKN,OCHpBO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAGvB,ECLyB,SAACA,GAEzB,MAA0Bb,mBAAS,CAC/BoB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAqBA,OAfAC,qBAAU,WACNxB,EAAOC,GAAUwB,MAAK,SAAAC,GAElBC,YAAW,WAEPJ,EAAS,CACLf,KAAMkB,EACNL,SAAS,MAEd,UAGR,CAACpB,IAGGqB,EDlBsBM,CAAa3B,GAA/Ba,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QAInB,OACI,gCACI,6BAAKpB,IACLoB,GAAW,gBAEPP,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEIA,GADCA,EAAIC,WEfhBiB,EAAe,WAExB,MAAoCzC,mBAAS,CAAC,cAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAEA,OACI,gCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQ2C,EAAWpB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAGAA,SAAUA,GADLA,Y,MCd7B8B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.75057ed0.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({ setCategories }) => {\n\n    const [inputValue, setinputValue] = useState('');\n\n    const handleInputChange = (e) => {\n\n        setinputValue(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (inputValue.length > 2) {\n            setCategories(cats => [inputValue, ...cats]);\n            setinputValue('');\n        }\n    }\n\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n                type='text'\n                value={inputValue}\n                onChange={handleInputChange}\n            />\n\n        </form>\n    )\n}\n\nAddCategory.propTypes={\n    setCategories:PropTypes.func.isRequired\n}","export const getGif = async ( category ) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&api_key=U3Gn1I79r3WHiqMhGm6sQ9NLk3AFnbIo`;\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n\n    const gifs = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images.downsized_medium.url\n        }\n    })\n    return gifs;\n}","import React from 'react'\n\nexport const GifGridItem = ( {id,title, url} ) => {\n\n//  console.log(url);\n\n    return (\n        <div className='card'>\n            <img src={url}  alt={title} />\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\n// import { getGif } from '../helpers/getGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n\n    // const [images, setImages] = useState([])\n   const {data:images, loading}= useFetchGifs(category);\n\n   \n\n    return (\n        <div>\n            <h3>{category}</h3>\n           {loading && 'Cargando.....'}\n            {\n                images.map(img => (\n                    <GifGridItem \n                    key={img.id}\n                    {...img}\n                     />\n\n                ))\n            }\n        </div>\n    )\n}\n","import { useEffect, useState } from \"react\";\nimport { getGif } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (category) => {\n\n    const [state, setstate] = useState({\n        data: [],\n        loading: true\n\n    });\n\n    useEffect(() => {\n        getGif(category).then(imgs => {\n\n            setTimeout(() => {\n\n                setstate({\n                    data: imgs,\n                    loading: false\n                });\n            }, 3000);\n\n        });\n    }, [category])\n\n\n    return state;\n}","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory'\nimport { GifGrid } from './components/GifGrid'\n\nexport const GifExpertApp = () => {\n\n    const [categories, setCategories] = useState(['One punch'])\n\n    return (\n        <div>\n            <h1>GifExpertApp</h1>\n            <AddCategory setCategories={setCategories} />\n            <hr />\n\n            <ol>\n                {\n                    categories.map(category => (\n                        <GifGrid \n                        \n                        key={category}\n                        category={category}\n                         />\n                    ))\n                }\n            </ol>\n\n\n        </div>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}